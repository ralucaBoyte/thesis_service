/*
 * This file is generated by jOOQ.
 */
package ro.ubbcluj.cs.ams.attendance.model.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ro.ubbcluj.cs.ams.attendance.model.Keys;
import ro.ubbcluj.cs.ams.attendance.model.Public;
import ro.ubbcluj.cs.ams.attendance.model.tables.records.AttendanceInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttendanceInfo extends TableImpl<AttendanceInfoRecord> {

    private static final long serialVersionUID = -1723665659;

    /**
     * The reference instance of <code>public.attendance_info</code>
     */
    public static final AttendanceInfo ATTENDANCE_INFO = new AttendanceInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttendanceInfoRecord> getRecordType() {
        return AttendanceInfoRecord.class;
    }

    /**
     * The column <code>public.attendance_info.id</code>.
     */
    public final TableField<AttendanceInfoRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('attendance_info_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.attendance_info.course_id</code>.
     */
    public final TableField<AttendanceInfoRecord, Integer> COURSE_ID = createField(DSL.name("course_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.attendance_info.activity_id</code>.
     */
    public final TableField<AttendanceInfoRecord, Integer> ACTIVITY_ID = createField(DSL.name("activity_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.attendance_info.professor_id</code>.
     */
    public final TableField<AttendanceInfoRecord, String> PROFESSOR_ID = createField(DSL.name("professor_id"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>public.attendance_info.created_at</code>.
     */
    public final TableField<AttendanceInfoRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.attendance_info.remaining_time</code>.
     */
    public final TableField<AttendanceInfoRecord, Integer> REMAINING_TIME = createField(DSL.name("remaining_time"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.attendance_info</code> table reference
     */
    public AttendanceInfo() {
        this(DSL.name("attendance_info"), null);
    }

    /**
     * Create an aliased <code>public.attendance_info</code> table reference
     */
    public AttendanceInfo(String alias) {
        this(DSL.name(alias), ATTENDANCE_INFO);
    }

    /**
     * Create an aliased <code>public.attendance_info</code> table reference
     */
    public AttendanceInfo(Name alias) {
        this(alias, ATTENDANCE_INFO);
    }

    private AttendanceInfo(Name alias, Table<AttendanceInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private AttendanceInfo(Name alias, Table<AttendanceInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> AttendanceInfo(Table<O> child, ForeignKey<O, AttendanceInfoRecord> key) {
        super(child, key, ATTENDANCE_INFO);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<AttendanceInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ATTENDANCE_INFO;
    }

    @Override
    public UniqueKey<AttendanceInfoRecord> getPrimaryKey() {
        return Keys.PK_ATTENDANCE_INFO;
    }

    @Override
    public List<UniqueKey<AttendanceInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<AttendanceInfoRecord>>asList(Keys.PK_ATTENDANCE_INFO);
    }

    @Override
    public List<ForeignKey<AttendanceInfoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AttendanceInfoRecord, ?>>asList(Keys.ATTENDANCE_INFO__FK_ATTENDANCE_INFO_SUBJECT, Keys.ATTENDANCE_INFO__FK_ATTENDANCE_INFO_ACTIVITY);
    }

    public Subject subject() {
        return new Subject(this, Keys.ATTENDANCE_INFO__FK_ATTENDANCE_INFO_SUBJECT);
    }

    public Activity activity() {
        return new Activity(this, Keys.ATTENDANCE_INFO__FK_ATTENDANCE_INFO_ACTIVITY);
    }

    @Override
    public AttendanceInfo as(String alias) {
        return new AttendanceInfo(DSL.name(alias), this);
    }

    @Override
    public AttendanceInfo as(Name alias) {
        return new AttendanceInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AttendanceInfo rename(String name) {
        return new AttendanceInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AttendanceInfo rename(Name name) {
        return new AttendanceInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Integer, String, LocalDateTime, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
