/*
 * This file is generated by jOOQ.
 */
package ro.ubbcluj.cs.ams.attendance.model.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ro.ubbcluj.cs.ams.attendance.model.tables.Subject;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubjectRecord extends UpdatableRecordImpl<SubjectRecord> implements Record5<Integer, String, Integer, Integer, Integer> {

    private static final long serialVersionUID = -1516580002;

    /**
     * Setter for <code>public.subject.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.subject.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.subject.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.subject.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.subject.credits</code>.
     */
    public void setCredits(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.subject.credits</code>.
     */
    public Integer getCredits() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.subject.year</code>.
     */
    public void setYear(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.subject.year</code>.
     */
    public Integer getYear() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.subject.specialization_id</code>.
     */
    public void setSpecializationId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.subject.specialization_id</code>.
     */
    public Integer getSpecializationId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, Integer, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Subject.SUBJECT.ID;
    }

    @Override
    public Field<String> field2() {
        return Subject.SUBJECT.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Subject.SUBJECT.CREDITS;
    }

    @Override
    public Field<Integer> field4() {
        return Subject.SUBJECT.YEAR;
    }

    @Override
    public Field<Integer> field5() {
        return Subject.SUBJECT.SPECIALIZATION_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getCredits();
    }

    @Override
    public Integer component4() {
        return getYear();
    }

    @Override
    public Integer component5() {
        return getSpecializationId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getCredits();
    }

    @Override
    public Integer value4() {
        return getYear();
    }

    @Override
    public Integer value5() {
        return getSpecializationId();
    }

    @Override
    public SubjectRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SubjectRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public SubjectRecord value3(Integer value) {
        setCredits(value);
        return this;
    }

    @Override
    public SubjectRecord value4(Integer value) {
        setYear(value);
        return this;
    }

    @Override
    public SubjectRecord value5(Integer value) {
        setSpecializationId(value);
        return this;
    }

    @Override
    public SubjectRecord values(Integer value1, String value2, Integer value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubjectRecord
     */
    public SubjectRecord() {
        super(Subject.SUBJECT);
    }

    /**
     * Create a detached, initialised SubjectRecord
     */
    public SubjectRecord(Integer id, String name, Integer credits, Integer year, Integer specializationId) {
        super(Subject.SUBJECT);

        set(0, id);
        set(1, name);
        set(2, credits);
        set(3, year);
        set(4, specializationId);
    }
}
