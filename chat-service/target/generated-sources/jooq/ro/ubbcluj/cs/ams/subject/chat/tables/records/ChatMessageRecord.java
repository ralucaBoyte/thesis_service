/*
 * This file is generated by jOOQ.
 */
package ro.ubbcluj.cs.ams.subject.chat.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ro.ubbcluj.cs.ams.subject.chat.tables.ChatMessage;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatMessageRecord extends UpdatableRecordImpl<ChatMessageRecord> implements Record5<Integer, String, String, String, Integer> {

    private static final long serialVersionUID = -1102852456;

    /**
     * Setter for <code>public.chat_message.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.chat_message.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.chat_message.sender</code>.
     */
    public void setSender(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.chat_message.sender</code>.
     */
    public String getSender() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.chat_message.receiver</code>.
     */
    public void setReceiver(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.chat_message.receiver</code>.
     */
    public String getReceiver() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.chat_message.content</code>.
     */
    public void setContent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.chat_message.content</code>.
     */
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.chat_message.conversation_id</code>.
     */
    public void setConversationId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.chat_message.conversation_id</code>.
     */
    public Integer getConversationId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ChatMessage.CHAT_MESSAGE.ID;
    }

    @Override
    public Field<String> field2() {
        return ChatMessage.CHAT_MESSAGE.SENDER;
    }

    @Override
    public Field<String> field3() {
        return ChatMessage.CHAT_MESSAGE.RECEIVER;
    }

    @Override
    public Field<String> field4() {
        return ChatMessage.CHAT_MESSAGE.CONTENT;
    }

    @Override
    public Field<Integer> field5() {
        return ChatMessage.CHAT_MESSAGE.CONVERSATION_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSender();
    }

    @Override
    public String component3() {
        return getReceiver();
    }

    @Override
    public String component4() {
        return getContent();
    }

    @Override
    public Integer component5() {
        return getConversationId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSender();
    }

    @Override
    public String value3() {
        return getReceiver();
    }

    @Override
    public String value4() {
        return getContent();
    }

    @Override
    public Integer value5() {
        return getConversationId();
    }

    @Override
    public ChatMessageRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ChatMessageRecord value2(String value) {
        setSender(value);
        return this;
    }

    @Override
    public ChatMessageRecord value3(String value) {
        setReceiver(value);
        return this;
    }

    @Override
    public ChatMessageRecord value4(String value) {
        setContent(value);
        return this;
    }

    @Override
    public ChatMessageRecord value5(Integer value) {
        setConversationId(value);
        return this;
    }

    @Override
    public ChatMessageRecord values(Integer value1, String value2, String value3, String value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatMessageRecord
     */
    public ChatMessageRecord() {
        super(ChatMessage.CHAT_MESSAGE);
    }

    /**
     * Create a detached, initialised ChatMessageRecord
     */
    public ChatMessageRecord(Integer id, String sender, String receiver, String content, Integer conversationId) {
        super(ChatMessage.CHAT_MESSAGE);

        set(0, id);
        set(1, sender);
        set(2, receiver);
        set(3, content);
        set(4, conversationId);
    }
}
