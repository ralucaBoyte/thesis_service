/*
 * This file is generated by jOOQ.
 */
package ro.ubbcluj.cs.ams.subject.chat.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ro.ubbcluj.cs.ams.subject.chat.tables.Conversation;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConversationRecord extends UpdatableRecordImpl<ConversationRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1485638240;

    /**
     * Setter for <code>public.conversation.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.conversation.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.conversation.username1</code>.
     */
    public void setUsername1(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.conversation.username1</code>.
     */
    public String getUsername1() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.conversation.username2</code>.
     */
    public void setUsername2(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.conversation.username2</code>.
     */
    public String getUsername2() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Conversation.CONVERSATION.ID;
    }

    @Override
    public Field<String> field2() {
        return Conversation.CONVERSATION.USERNAME1;
    }

    @Override
    public Field<String> field3() {
        return Conversation.CONVERSATION.USERNAME2;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername1();
    }

    @Override
    public String component3() {
        return getUsername2();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername1();
    }

    @Override
    public String value3() {
        return getUsername2();
    }

    @Override
    public ConversationRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ConversationRecord value2(String value) {
        setUsername1(value);
        return this;
    }

    @Override
    public ConversationRecord value3(String value) {
        setUsername2(value);
        return this;
    }

    @Override
    public ConversationRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConversationRecord
     */
    public ConversationRecord() {
        super(Conversation.CONVERSATION);
    }

    /**
     * Create a detached, initialised ConversationRecord
     */
    public ConversationRecord(Integer id, String username1, String username2) {
        super(Conversation.CONVERSATION);

        set(0, id);
        set(1, username1);
        set(2, username2);
    }
}
