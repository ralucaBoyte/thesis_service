/*
 * This file is generated by jOOQ.
 */
package ro.ubbcluj.cs.ams.auth.model.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ro.ubbcluj.cs.ams.auth.model.tables.Reviews;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReviewsRecord extends UpdatableRecordImpl<ReviewsRecord> implements Record5<Integer, String, String, String, Float> {

    private static final long serialVersionUID = -1722142599;

    /**
     * Setter for <code>public.reviews.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.reviews.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.reviews.professor</code>.
     */
    public void setProfessor(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.reviews.professor</code>.
     */
    public String getProfessor() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.reviews.student</code>.
     */
    public void setStudent(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.reviews.student</code>.
     */
    public String getStudent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.reviews.feedback</code>.
     */
    public void setFeedback(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.reviews.feedback</code>.
     */
    public String getFeedback() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.reviews.review_grade</code>.
     */
    public void setReviewGrade(Float value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.reviews.review_grade</code>.
     */
    public Float getReviewGrade() {
        return (Float) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, Float> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, Float> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Reviews.REVIEWS.ID;
    }

    @Override
    public Field<String> field2() {
        return Reviews.REVIEWS.PROFESSOR;
    }

    @Override
    public Field<String> field3() {
        return Reviews.REVIEWS.STUDENT;
    }

    @Override
    public Field<String> field4() {
        return Reviews.REVIEWS.FEEDBACK;
    }

    @Override
    public Field<Float> field5() {
        return Reviews.REVIEWS.REVIEW_GRADE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getProfessor();
    }

    @Override
    public String component3() {
        return getStudent();
    }

    @Override
    public String component4() {
        return getFeedback();
    }

    @Override
    public Float component5() {
        return getReviewGrade();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getProfessor();
    }

    @Override
    public String value3() {
        return getStudent();
    }

    @Override
    public String value4() {
        return getFeedback();
    }

    @Override
    public Float value5() {
        return getReviewGrade();
    }

    @Override
    public ReviewsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ReviewsRecord value2(String value) {
        setProfessor(value);
        return this;
    }

    @Override
    public ReviewsRecord value3(String value) {
        setStudent(value);
        return this;
    }

    @Override
    public ReviewsRecord value4(String value) {
        setFeedback(value);
        return this;
    }

    @Override
    public ReviewsRecord value5(Float value) {
        setReviewGrade(value);
        return this;
    }

    @Override
    public ReviewsRecord values(Integer value1, String value2, String value3, String value4, Float value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReviewsRecord
     */
    public ReviewsRecord() {
        super(Reviews.REVIEWS);
    }

    /**
     * Create a detached, initialised ReviewsRecord
     */
    public ReviewsRecord(Integer id, String professor, String student, String feedback, Float reviewGrade) {
        super(Reviews.REVIEWS);

        set(0, id);
        set(1, professor);
        set(2, student);
        set(3, feedback);
        set(4, reviewGrade);
    }
}
