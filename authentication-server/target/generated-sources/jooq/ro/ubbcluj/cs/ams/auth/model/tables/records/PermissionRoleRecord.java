/*
 * This file is generated by jOOQ.
 */
package ro.ubbcluj.cs.ams.auth.model.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ro.ubbcluj.cs.ams.auth.model.tables.PermissionRole;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PermissionRoleRecord extends UpdatableRecordImpl<PermissionRoleRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -1183088577;

    /**
     * Setter for <code>public.permission_role.permission_id</code>.
     */
    public void setPermissionId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.permission_role.permission_id</code>.
     */
    public Integer getPermissionId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.permission_role.role_id</code>.
     */
    public void setRoleId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.permission_role.role_id</code>.
     */
    public Integer getRoleId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PermissionRole.PERMISSION_ROLE.PERMISSION_ID;
    }

    @Override
    public Field<Integer> field2() {
        return PermissionRole.PERMISSION_ROLE.ROLE_ID;
    }

    @Override
    public Integer component1() {
        return getPermissionId();
    }

    @Override
    public Integer component2() {
        return getRoleId();
    }

    @Override
    public Integer value1() {
        return getPermissionId();
    }

    @Override
    public Integer value2() {
        return getRoleId();
    }

    @Override
    public PermissionRoleRecord value1(Integer value) {
        setPermissionId(value);
        return this;
    }

    @Override
    public PermissionRoleRecord value2(Integer value) {
        setRoleId(value);
        return this;
    }

    @Override
    public PermissionRoleRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PermissionRoleRecord
     */
    public PermissionRoleRecord() {
        super(PermissionRole.PERMISSION_ROLE);
    }

    /**
     * Create a detached, initialised PermissionRoleRecord
     */
    public PermissionRoleRecord(Integer permissionId, Integer roleId) {
        super(PermissionRole.PERMISSION_ROLE);

        set(0, permissionId);
        set(1, roleId);
    }
}
