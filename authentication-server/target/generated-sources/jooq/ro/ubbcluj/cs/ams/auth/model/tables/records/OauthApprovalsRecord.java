/*
 * This file is generated by jOOQ.
 */
package ro.ubbcluj.cs.ams.auth.model.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;

import ro.ubbcluj.cs.ams.auth.model.tables.OauthApprovals;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OauthApprovalsRecord extends TableRecordImpl<OauthApprovalsRecord> implements Record6<String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 857734360;

    /**
     * Setter for <code>public.oauth_approvals.user_id</code>.
     */
    public void setUserId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.oauth_approvals.user_id</code>.
     */
    public String getUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.oauth_approvals.client_id</code>.
     */
    public void setClientId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.oauth_approvals.client_id</code>.
     */
    public String getClientId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.oauth_approvals.scope</code>.
     */
    public void setScope(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.oauth_approvals.scope</code>.
     */
    public String getScope() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.oauth_approvals.status</code>.
     */
    public void setStatus(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.oauth_approvals.status</code>.
     */
    public String getStatus() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.oauth_approvals.expires_at</code>.
     */
    public void setExpiresAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.oauth_approvals.expires_at</code>.
     */
    public LocalDateTime getExpiresAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.oauth_approvals.last_modified_at</code>.
     */
    public void setLastModifiedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.oauth_approvals.last_modified_at</code>.
     */
    public LocalDateTime getLastModifiedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return OauthApprovals.OAUTH_APPROVALS.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return OauthApprovals.OAUTH_APPROVALS.CLIENT_ID;
    }

    @Override
    public Field<String> field3() {
        return OauthApprovals.OAUTH_APPROVALS.SCOPE;
    }

    @Override
    public Field<String> field4() {
        return OauthApprovals.OAUTH_APPROVALS.STATUS;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return OauthApprovals.OAUTH_APPROVALS.EXPIRES_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return OauthApprovals.OAUTH_APPROVALS.LAST_MODIFIED_AT;
    }

    @Override
    public String component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getClientId();
    }

    @Override
    public String component3() {
        return getScope();
    }

    @Override
    public String component4() {
        return getStatus();
    }

    @Override
    public LocalDateTime component5() {
        return getExpiresAt();
    }

    @Override
    public LocalDateTime component6() {
        return getLastModifiedAt();
    }

    @Override
    public String value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getClientId();
    }

    @Override
    public String value3() {
        return getScope();
    }

    @Override
    public String value4() {
        return getStatus();
    }

    @Override
    public LocalDateTime value5() {
        return getExpiresAt();
    }

    @Override
    public LocalDateTime value6() {
        return getLastModifiedAt();
    }

    @Override
    public OauthApprovalsRecord value1(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public OauthApprovalsRecord value2(String value) {
        setClientId(value);
        return this;
    }

    @Override
    public OauthApprovalsRecord value3(String value) {
        setScope(value);
        return this;
    }

    @Override
    public OauthApprovalsRecord value4(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public OauthApprovalsRecord value5(LocalDateTime value) {
        setExpiresAt(value);
        return this;
    }

    @Override
    public OauthApprovalsRecord value6(LocalDateTime value) {
        setLastModifiedAt(value);
        return this;
    }

    @Override
    public OauthApprovalsRecord values(String value1, String value2, String value3, String value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OauthApprovalsRecord
     */
    public OauthApprovalsRecord() {
        super(OauthApprovals.OAUTH_APPROVALS);
    }

    /**
     * Create a detached, initialised OauthApprovalsRecord
     */
    public OauthApprovalsRecord(String userId, String clientId, String scope, String status, LocalDateTime expiresAt, LocalDateTime lastModifiedAt) {
        super(OauthApprovals.OAUTH_APPROVALS);

        set(0, userId);
        set(1, clientId);
        set(2, scope);
        set(3, status);
        set(4, expiresAt);
        set(5, lastModifiedAt);
    }
}
